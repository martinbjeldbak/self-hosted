---
version: "3"

services:
  adguardhome:
    image: adguard/adguardhome
    container_name: adguardhome
    ports:
      - 53:53/tcp # plain DNS
      - 53:53/udp # plain DNS
    expose:
      - 3000 # UI
    volumes:
      - /home/pi/adguardhome/work:/opt/adguardhome/work
      - ./adguardhome:/opt/adguardhome/conf
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=${TZ}
    restart: unless-stopped

  homeassistant:
    image: homeassistant/raspberrypi3-homeassistant:stable
    container_name: homeassistant
    expose:
      - 8123
    volumes:
      - ./homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=${TZ}
    restart: always

  jackett:
    image: ghcr.io/linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - AUTO_UPDATE=true
    expose:
      - 9117
    restart: unless-stopped
    volumes:
      - ./jackett/config:/config # not tracked in git
      - nas:/downloads

  plex:
    build:
      context: ./pms-docker
      dockerfile: Dockerfile.armv7
    container_name: plex
    restart: unless-stopped
    ports:
      - 1900:1900/udp # access to the Plex DLNA Server
      - 32410:32410/udp # current GDM network discovery
      - 32412:32412/udp # current GDM network discovery
      - 32413:32413/udp # current GDM network discovery
      - 32414:32414/udp # current GDM network discovery
      - 32469:32469/tcp # access to the Plex DLNA Server
    expose:
      - 32400 # access to the Plex Media Server
    environment:
      - TZ=${TZ}
      - PLEX_CLAIM=${PLEX_CLAIM}
      - ADVERTISE_IP=http://${STATIC_IP}:32400/
    volumes:
      - /home/pi/plex/config:/config # not tracked in git
      - nas:/data

  transmission:
    image: ghcr.io/linuxserver/transmission
    container_name: transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - TRANSMISSION_WEB_HOME=/flood-for-transmission/
      - USER=${TRANSMISSION_USERNAME}
      - PASS=${TRANSMISSION_PASSWORD}
    volumes:
      - ./transmission:/config
      - nas:/downloads
    ports:
      - 51413:51413/tcp
      - 51413:51413/udp
    expose:
      - 9091
    restart: unless-stopped

  radarr:
    image: ghcr.io/linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    expose:
      - 7878
    restart: unless-stopped
    volumes:
      - /home/pi/radarr/config:/config # not tracked in git
      - nas:/movies
      - nas:/downloads

  sonarr:
    image: ghcr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    expose:
      - 8989
    restart: unless-stopped
    volumes:
      - /home/pi/sonarr/config:/config # not tracked in git
      - nas:/tv
      - nas:/downloads

  bazarr:
    image: ghcr.io/linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    expose:
      - 6767
    restart: unless-stopped
    volumes:
      - ./bazarr:/config
      - nas:/movies
      - nas:/tv

  caddy:
    build:
      context: .
      dockerfile: caddy.Dockerfile
    container_name: caddy
    ports:
      - 80:80 # for HTTP -> HTTPS redirect
      - 443:443
    restart: unless-stopped
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - /home/pi/caddy/config:/config
      - /home/pi/caddy/data:/data
    environment:
      - CADDYUID=1000
      - CADDYGID=1000
      - TZ=${TZ}
    env_file:
      - .caddy.env
    healthcheck:
      test: ["CMD", "caddy", "version"]

volumes:
  nas:
    driver_opts:
      type: cifs
      device: //${NAS_IP}/media
      o: "addr=${NAS_IP},username=${NAS_USERNAME},password=${NAS_PASSWORD},file_mode=0777,dir_mode=0777"
