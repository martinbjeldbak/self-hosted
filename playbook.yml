---
- name: Raspberry Pi playbook
  hosts: all

  tasks:
    - name: Increase swap size
      include_role:
        name: geerlingguy.swap
        apply:
          become: true
      vars:
        swap_file_size_mb: '2048'

    - name: Update and upgrade apt packages
      become: true
      apt:
        upgrade: dist
        update_cache: true

    # See https://askubuntu.com/a/1264921/431204
    - name: Download updated libseccomp for Plex support
      become: true
      apt:
        deb: http://ftp.au.debian.org/debian/pool/main/libs/libseccomp/libseccomp2_2.4.4-1~bpo10+1_armhf.deb
      tags:
        - docker

    - name: Install and set up docker and docker-compose
      include_role:
        name: nickjj.docker
        apply:
          become: true
      tags:
        - docker

    - name: Install tmux
      become: true
      apt:
        name: tmux
        state: present

    # Set static IP
    - name: Install network manager
      become: true
      apt:
        name: network-manager
        state: present

    - name: Configure network
      become: true
      community.general.nmcli:
        state: present
        conn_name: eth0
        ifname: eth0
        type: ethernet
        ip4: 192.168.1.250/24
        gw4: 192.168.1.1
        dns4:
          - 1.1.1.1

    - name: Setup SSH authorization
      authorized_key:
        user: pi
        state: present
        key: https://github.com/martinbjeldbak.keys

    - name: Change pi user password
      become: true
      user:
        name: pi
        update_password: always
        password: "{{ lookup('community.general.onepassword', 'Raspberry Pi', section='SSH', field='password') | password_hash('sha512') }}"

    - name: Ensure deploy key is present
      community.crypto.openssh_keypair:
        path: "~/.ssh/id_github"
        type: ed25519
      register: deploy_key

    - name: Ensure deploy key is authorized with repository
      community.general.github_deploy_key:
        key: "{{  deploy_key.public_key }}"
        name: Raspberry Pi
        state: present
        owner: martinbjeldbak
        repo: raspberry-pi
        token: "{{ lookup('community.general.onepassword', 'Raspberry Pi', section='GitHub', field='token') }}"

    - name: Clone GitHub repository
      git:
        repo: git@github.com:martinbjeldbak/raspberry-pi.git
        dest: /home/pi/raspberry-pi/
        clone: true
        update: true
        key_file: ~/.ssh/id_github
        accept_hostkey: true

    - name: Create docker-compose .env file
      ansible.builtin.copy:
        dest: /home/pi/raspberry-pi/.env
        content: |
          TZ=Australia/Melbourne
          STATIC_IP=192.168.1.250
          PLEX_CLAIM={{ lookup('community.general.onepassword', 'Raspberry Pi', section='Plex', field='Claim') }}
          NAS_IP=192.168.1.160
          NAS_USERNAME={{ lookup('community.general.onepassword', 'Raspberry Pi', section='NAS', field='Username') }}
          NAS_PASSWORD={{ lookup('community.general.onepassword', 'Raspberry Pi', section='NAS', field='Password') }}

    - name: Create Home Assistant secrets.yaml
      ansible.builtin.copy:
        dest: /home/pi/raspberry-pi/homeassistant/secrets.yaml
        content: |
          ---
          latitude: {{ lookup('community.general.onepassword', 'Raspberry Pi', section='Home Assistant', field='Latitude') }}
          longitude: {{ lookup('community.general.onepassword', 'Raspberry Pi', section='Home Assistant', field='Longitude') }}
          spotifyclientid: {{ lookup('community.general.onepassword', 'Raspberry Pi', section='Home Assistant', field='Spotify Client ID') }}
          spotifyclientsecret: {{ lookup('community.general.onepassword', 'Raspberry Pi', section='Home Assistant', field='Spotify Client Secret') }}
          routerpassword: {{ lookup('community.general.onepassword', 'Raspberry Pi', section='Home Assistant', field='Router Password') }}
          radarr_api_key: {{ lookup('community.general.onepassword', 'Raspberry Pi', section='Home Assistant', field='Radarr API Key') }}

    - name: Install unattended upgrades
      become: true
      apt:
        name: unattended-upgrades
        state: present

    - name: Setup unattended upgrades
      debconf:
        name: unattended-upgrades
        question: unattended-upgrades/enable_auto_updates
        vtype: boolean
        value: "true"

    - name: Install fail2ban # prevent SSH bruteforcing
      become: true
      apt:
        name: fail2ban
        state: present

    - name: Install ufw
      become: true
      apt:
        name: ufw
        state: present

    - name: Limit ssh
      become: true
      community.general.ufw:
        rule: limit
        port: ssh
        proto: tcp

    - name: Allow access to required ports
      become: true
      community.general.ufw:
        rule: allow
        port: '{{ item }}'
      loop:
        - ssh
        - http
        - https
        - '53' # DNS
        - '9117' # Jackett
        - '32400' # Plex
        - '9091' # Transmission UI
        - '51413' # Transmission
        - '7878' # Radarr
        - '8989' # Sonarr

    - name: Enable ufw and default to deny
      become: true
      ufw:
        state: enabled
        default: deny

    - name: Create and start docker-compose services
      become: true
      community.docker.docker_compose:
        project_src: /home/pi/raspberry-pi
        pull: true
        build: true
        remove_orphans: true
      vars:
        ansible_python_interpreter: "/usr/bin/env python3-docker"
      register: output
      tags:
        - docker
